/* automatically generated by rust-bindgen */

pub type U32 = ::std::os::raw::c_uint;
pub type U8 = ::std::os::raw::c_uchar;
pub type Err = ::std::os::raw::c_int;
pub type TYPE = ::std::os::raw::c_uchar;
extern "C" {
    pub fn close_can0() -> Err;
}
extern "C" {
    pub fn read_unsigned(node: ::std::os::raw::c_int, index: ::std::os::raw::c_int, sub: U8)
        -> U32;
}
extern "C" {
    pub fn write_unsigned(
        node: ::std::os::raw::c_int,
        index: ::std::os::raw::c_int,
        sub: U8,
        type_: TYPE,
        value: U32,
    ) -> Err;
}
extern "C" {
    pub fn analog_get_uart01(node: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn analog_set_baut01(node: ::std::os::raw::c_int, baut: U32) -> Err;
}
extern "C" {
    pub fn analog_set_uart01(node: ::std::os::raw::c_int, data: *mut ::std::os::raw::c_char)
        -> Err;
}
extern "C" {
    pub fn analog_get_uart02(node: ::std::os::raw::c_int) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn analog_set_baut02(node: ::std::os::raw::c_int, baut: U32) -> Err;
}
extern "C" {
    pub fn analog_set_uart02(node: ::std::os::raw::c_int, data: *mut ::std::os::raw::c_char)
        -> Err;
}
extern "C" {
    pub fn analog_get_in01(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_get_in02(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_get_in03(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_get_in04(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_get_in05(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_get_out(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_set_out(node: ::std::os::raw::c_int, value: U32) -> Err;
}
extern "C" {
    pub fn analog_get_temp01(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_get_temp02(node: ::std::os::raw::c_int) -> U32;
}
extern "C" {
    pub fn analog_get_temp03(node: ::std::os::raw::c_int) -> U32;
}
